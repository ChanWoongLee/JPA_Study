<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence"
             version="2.1">
    <persistence-unit name="hello">
        <class>helloJPA.domain.Team</class>
        <class>helloJPA.domain.Animal</class>
        <class>helloJPA.domain.Bird</class>
        <class>helloJPA.domain.Member</class>
        <properties>
            <!-- 필수 속성 -->
            <property name="javax.persistence.jdbc.driver" value="org.h2.Driver"/>
            <property name="javax.persistence.jdbc.user" value="sa"/>
            <property name="javax.persistence.jdbc.password" value=""/>
            <property name="javax.persistence.jdbc.url" value="jdbc:h2:tcp://localhost/~/test"/>
            <!-- SQL 표준을 지키지 않는 특정 테이터베이스만의 고유한 기능! -->
            <property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect"/>

            <!-- 옵션 -->
            <!-- 콘솔에 하이버네이트가 실행하는 SQL문 출력 -->
            <property name="hibernate.show_sql" value="true"/>
            <!-- SQL 출력 시 보기 쉽게 정렬 -->
            <property name="hibernate.format_sql" value="true"/>
            <!-- 쿼리 출력 시 주석(comments)도 함께 출력 -->
            <property name="hibernate.use_sql_comments" value="true"/>
            <!-- 자동으로 엔티티에 따른 DDL문 생성 -->
            <!-- create : 해당 테이블 지운후에 다시만듬-->
            <!-- create-drop : create후 종료시접에 drop-->
            <!-- update : 변경부분만 반영-->
            <!-- validate : 엔티티와 테이블이 정상 맵핑되어있는지만 확인한다.-->
            <property name="hibernate.hbm2ddl.auto"  value="create"/>
        </properties>
    </persistence-unit>
</persistence>